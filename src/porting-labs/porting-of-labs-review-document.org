* Porting of a new lab to Open Edx
- Go to https://github.com/vlead/port-labs-to-openedx/blob/develop/src/porting-labs/index.org and start reading through the first point.
- First point would refer to a document : https://github.com/vlead/port-labs-to-openedx/blob/develop/src/porting-labs/automation.org
- Under the Usage section follow the steps given below :
  + First create a directory with the lab name which you wish to port to open edx in your local machine.
  + Create a file named labspec.json inside that lab name directory.
  + Create the structure of the lab which you wish to port into the
    required format and put in the labspec.json file. To create the
    structure of the lab follow the steps :
    + Use this example [[https://github.com/vlead/port-labs-to-openedx/blob/develop/src/porting-labs/lab-spec.json][labspec.json]] file for creating the structure of your lab.
    + Edit this example file to replicate the lab structure you want to convert.
    + Inside the course object value replace the value of org, id,
      display_name, overview with Organization Name, Lab Id, Name of
      the lab, Description of the lab respectively.
    + Inside the experiments object value enter the list of all the experiments in this particular lab.
    + Inside the experiment object list value leave the first element unchanged which is the introduction subsection for this lab.
    + Inside each experiment object replace the names of the subsectionsui with the subsections in this particular experiment.
    + Finally you should be able to create the labspec.json document you need for the lab to be converted.
  + Once the labspec.json file is ready we can move to running the
    automation.py script for converting this lab into an open edx
    course.
  + Clone the repo : [[https://github.com/vlead/port-labs-to-openedx][port-labs-to-openedx]] in your local machine,
    change directory to port-labs-to-openedx and switch to develop
    branch by doing <git checkout develop>
  + Run =make= (if this is your second or third trail, first do git
    pull, run =make clean= and then run =make=)
  + If you dont face any build error and =make= runs successfully,
    change directory to /build/code/src
  + There will be a automation.py file inside /build/code/src.
  + Run python automation.py <Lab-Directory-Path> (Give the absolute
    path of the lab directory)
  + Now you could see various folders named about, chapter, course,
    discussion, drafts etc inside the lab directory after successfully
    running the above given command.
  + Compress the lab directory into tar.gz file.
  + Go to Open Edx studio and sign in if you are already registered
    and have permissions for creating a course, otherwise register and
    start creating a course.
  + Click on =New Course= button on top right corner to create the new course.
  + Fill the course name, Organisation, Course Number and Course Run
    as =Anytime= and click on =Create Course=.
  + Click on =New section= and copy paste the content in each subsection
    under experiments in a lab into the relevant subsections in the
    Open edX course you created with the Open edX studio [[https://www.edx.org/course/creating-course-edx-studio-edx-studiox][Creating a
    course with Open edX Studio]].
- Come back to the [[https://github.com/vlead/port-labs-to-openedx/blob/develop/src/porting-labs/index.org][document]] under the section : Port a Lab. First step
  is completed if all the above listed steps here are successfully
  completed.
- Click on =Tools= dropdown menu option from top. Click on =import= option.
- Click on =Choose a file to Import= and choose the tar.gz file of the
  lab which was created from step above and click on =Replace course
  content with file= and finally click on =View Updated Outline= and
  the course is created with this step.
- Few more steps to make other modifications are listed below : 
  + Changing course date to Anytime
    + Click on Course name which you own.
    + Go to settings drop down, and click Advanced settings.
    + Change field “Course ADvertised Start Date” from null to “Anytime”
    + Save your changes

  + Changing the default course preview and upload course image
    + Click on Course name which you own.
    + Go to schedule and details in settings drop down
    + Let all the fileld in course schedule be empty
    + In “Introducing your Course” section edit the “Course Overview” as per your requirement.
    + Add a course image by clicking on Upload image button
    + Save your changes

 + Creation of a repository on GitHub 
   + Export the lab Tools dropdown menu on the top of the Studio. A
     zipped file is downloaded. Unzip and untar the exported file to produce a directory.
     + tar zxvf testlab.tar.gz      
   + Create a repository on the github.
   + Clone the new created repository.
   + Copy entire contents of the directory created in step 1 to the directory created in step 3.
   + Add, commit and push all the changes to the git repository.


