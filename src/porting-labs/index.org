#+TITLE: Porting Virtual Labs to Open edX Platform
#+Author: VLEAD
#+Date: [2016-01-27 Wed]
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ../org-templates/level-1.org

* Introduction
  This document demonstrates:
  - creation of a skeletal structure for a lab in the format expected by Open
    edX studio from a specification
  - import and addition of content to the skeletal structure
  - configuration changes to publish a lab 

* Porting an existing lab to Open edX

** Labs Chosen
   All Labs on integration level 5 or 6 are ported to openedx.

** Port a Lab
   1. Creation of skeletal structure for a specification :: [[./automation.org][This document]]
        illustrates the creation of skeletal structure of a lab.
   2. Tar and zip the directory and import the zipped file into the studio.
     #+BEGIN_EXAMPLE
     tar cvf testlab.tar </home/user/testlab/
     gzip testlab.tar
     #+END_EXAMPLE
   3. Import this tar file to the Open edX studio from =Tools= dropdown menu on
      the top.
   4. Add content to the lab.  Follow this [[http://edx.readthedocs.org/projects/edx-partner-course-staff/en/latest/index.html][link]] for more information on
      creation of a course and configuring it. 
   5. Changing course date to Anytime
      - Click on Course name which you own.
      - Go to settings drop down, and click Advanced settings.
      - Change field "Course ADvertised Start Date" from =null= to "Anytime"
      - Save your changes
   6. Changing the default course preview and upload course image
      - Click on Course name which you own.
      - Go to schedule and details in settings drop down
      - Let all the fileld in course schedule be empty
      - In "Introducing your Course" section edit the "Course Overview" as per
        your requirement.
      - Add a course image by clicking on Upload image button
      - Save your changes


** Creation of a repository on GitHub

   1. Export the lab =Tools= dropdown menu on the top of the Studio.  A zipped
      file is downloaded.  Unzip and untar the exported file to produce a
      directory.
      #+BEGIN_EXAMPLE
      tar zxvf testlab.tar.gz      
      #+END_EXAMPLE

   2. Create a repository on the github.
   3. Clone the new created repository.
   4. Copy entire contents of the directory created in step 1 to the directory
      created in step 3.
   5. Add, commit and push all the changes to the git repository. 


** Configure a course for Production

   1. Log in to edX studio
   2. Click on New Course button to create the course
   3. Fill the course name
      #+BEGIN_EXAMPLE
      Computer Programming
      #+END_EXAMPLE
   4. Fill the Organisation
      #+BEGIN_EXAMPLE
      IIIT-Hyderabad
      #+END_EXAMPLE
   5. Fill the Course Number
      #+BEGIN_EXAMPLE
      CSE02
      #+END_EXAMPLE
   6. Fill the Course RunAnytime
   7. Clone the repository and tar and zip it.
   8. Import the zipped file into the studio.
* Integration of feedback and analytics 
** Integration of feedback 
    + Create a section called Feedback at lab level (Use the steps as
      given above in the document to create a section)
    + Add the following code in the HTML editor exposed by Open edX.
      #+BEGIN_SRC javascript
      <p>
      <script src="http://open-edx.vlabs.ac.in:5959/feedback_utils.js"></script>
      <script>// <![CDATA[

      var user_id = "%%USER_ID%%"
      var lab_id = "HTV-AU"
      var lab_name = "Heat and Thermodynamics Virtual Lab"
      var exp_id = "E99983"
      var exp_name = "The Study of Phase Change"
      // ]]></script>

      </p>
      <p><a onclick="submit_feedback(lab_id, lab_name, exp_id, exp_name, user_id)" style="cursor: pointer;">Click here </a> to give feedback</p>
      #+END_SRC
    + In the above sample code edit the following variables lab_id,
      lab_name, exp_id, exp_name using the lab specifications given
      here https://github.com/vlead/lab-specifications

** Integration of analytics 
    + Analytics is to be fetched from every experiment section or
      simulation section of a lab in Open edX.
    + In a ported lab on Open edX, edit the Simulator/Experiment
      section and add the following code
      #+BEGIN_SRC javascript
      <p><button onclick="popup()">Full Screen</button></p>
      <p><iframe src="GIVE EXPERIMENT URL HERE" height="602" width="802"> </iframe></p>
      <script>// <![CDATA[ 
      function popup(){
      window.open('GIVE EXPERIMENT URL HERE', '_blank', 'toolbar=0,location=0,menubar=0');
      }
      // ]]></script>
      <p></p>
      <script>// <![CDATA[
      // ****** ALSO MODIFY THE URLS GIVEN ABOVE **************
      // ********MODIFY THIS SECTION **************************

      var lab_id = "HTV-AU"; 
      var exp_name = "The Study of Phase Change"
      var lab_name = "Heat and Thermodynamics Virtual Lab"
      var user_id = "%%USER_ID%%"; //get the User ID as a string  
      var exp_id = "E098934"
 
      var server_url = "http://analytics-api.vlabs.ac.in/"

      var xhttp = new XMLHttpRequest();
      var urlstr = server_url + user_id + "," + lab_id + "," + lab_name + "," + exp_id + "," + exp_name
      xhttp.open("GET", urlstr, true);
      xhttp.send();
 
      // *******DO NOT MODIFY THIS SECTION AGAIN ************
      // ]]></script>
      #+END_SRC
    + In the above sample javascript, edit the section given in
      CAPITAL LETTERS and also give the appropriate values to
      javascript variables - lab_id, lab_name, exp_name, exp_id
    
