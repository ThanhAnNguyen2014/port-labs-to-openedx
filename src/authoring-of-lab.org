* Authoring of a lab to Open edX platform
** Introduction
   This document demonstrates creation of a new lab in the format
   expected by Open edX studio and publish a lab. 
** Motivation
   This document is driven by the commitment of delivering a new
   lab/course on Open edX platform which can be accomplished by
   following an efficient authoring process. The entire workflow
   starting from the creation of a new course/lab to publishing it for
   the end user lab is detailed in the followings sections.
** Protocol to request for authoring a new lab
    + A new lab request should be raised as an issue in
      Virtual-Labs engineers-forum in GitHub.
    + VLEAD would create the labspec.json and put it in the [[https://github.com/openedx-vlead/lab-specifications][GitHub repo]].
    + This labspec.json link would be provided to the lab requester and
      he/she would create the course referring to the given values in
      the labspec :
      + Course Name
      + Organisation
      + Course ID
      + Course Start Date : This has to be =Anytime=
    + The course creator would be given the stagging instance of Open edX (not the
    production instance to control the unnecessary modifications), to
    create the course.
    + The author/creator would attach the tar.gz file of the course with all the
      contents in the same issue where the course creation was request
      (Engineers-Forum).
    + VLEAD will import it on the production machine after
      verification of all the course credentials as per the labspec
      specifications.Now the course/lab would be available to all the
      users.
** Steps to create a new lab in Open edX
*** Creation of labspec.json file by VLEAD
    The below steps would be followed to create the structure of the lab which
    is required to be created as a new course in Open edX : 
    + The example [[https://github.com/openedx-vlead/port-labs-to-openedx/blob/develop/src/porting-labs/labspec.json][labspec.json]] file could be used for creating the
      Open edX structure of the lab.
    + This example file could be edited to replicate the desired lab
      structure.
    + The "course" field must be filled with the values of "org",
      "id", "display_name" and "overview" as Organization Name, Lab
      Id, Name of the lab and Description of the lab respectively. Lab
      Ids could be obtained from [[https://docs.google.com/spreadsheets/d/1qIU42qaMVtwpP_6eV3YXjJs8CJb6wnPPclFgqbGdlCM/edit?usp=sharing][here]]. Lab Ids should be given in
      capital letters for uniformity and white spaces or special
      characters must be avoided in the same.
    + The "experiments" field must be entered with the list of all
      the experiments for the particular lab.
    + If the lab also includes fields like Target Audience, Courses
      Aligned, Feedback etc, they have to be created as separate
      sections in labspec.json file.
    + For the "experiments" field, the first two fields called =name=
      and =subsections= must be left unchanged as =Introduction=.
    + The rest of the =name= and =subsections= fields below should be
      filled with the names of the subsections of the the various
      experiments of the lab.
    + Care needs to be taken while creating the labspec.json file. For
      verifying the correctness of the json file and avoid any errors,
      [[http://jsonparseronline.com][json parser]] could be used.
    + The created labspec.json file would be provided to the course
      requester for creating the course.
*** Creation of a course by the author
    + Signin on [[http://open-edx.vlabs.ac.in:18010/][Open edX studio]] and start creating the course. For the
      first time users, they have to register to create a course. In
      order to view the course in Open edX LMS (Learning Management
      System), [[http://open-edx.vlabs.ac.in][Open edX LMS]] should be visited.
    + Click on =New Course= button on top right corner to start
      creating the new course.
    + Fill the Course Name, Organisation, Course Number and Course Run. 
      as per the labspec.json provided by VLEAD and click on =Create
      Course=.
    + The content of the course (HTML/text/images/simulations) would
      be placed in the units. Follow the link for better insight :
      [[https://www.edx.org/course/creating-course-edx-studio-edx-studiox][Creating a course with Open edX Studio]]. Following the given link
      is strongly recommended as it would enhance the understanding of
      Open edX terminologies and their usage.
    + Difference between published and released content and different
      views with staff and student views in LMS could be learnt in
      greater details from : [[https://www.edx.org/course/creating-course-edx-studio-edx-studiox][Creating a course with Open edX Studio]]
**** Including the text content
    + Click on =+ New Section= to create a new section for an
      experiment in the course and hit Enter to save it.
    + Click on =+ New Subsection= to create new subsections named
      *Aim* , *Theory* , *Simulation* , *Video* etc based on the
      labspec details and hit Enter to save it.
    + For Example : For *Aim* subsection, click on =+ New Unit= to
      create a unit and name as *Aim*.
      + Click on =HTML= from Add New Component and select =Text= field.
      + Click on =EDIT= tab at top right corner of editor, write
        the required content and click on =Save=.
      + Go back to *Aim* subsection on Studio Home to create more
        units if required.
    + Create another subsection named *Theory*, follow the same
      process as that of *Aim* and write the required content.
**** Including the simulations
    + For including *Simulation* and *Video*
      + Click on =+ New Unit= to create a unit named *Simulation*
      + Click on =HTML= from Add New Component and select =IFrame Tool= field.
      + Click on =EDIT= tab and select =HTML= tab, the last icon on
        the editor.
      + Include the iframe code for the simulations which might be
        served from some other servers. In case the simulations are
        not hosted anywhere, the entire code could be included for
        rendering the simulations.
      + If there are multiple simulators for a single experiment,
        those would be created in different units.
      + The below code should be included in the HTML source code
        editor. The src field would include the https simulation URL
        if it is already hosted on some server. There would be a full
        screen button also included to open the simulator in a new
        full screen.

#+BEGIN_EXAMPLE
    <p><button onclick="popup()">Full Screen</button></p>
<p></p>
<p><iframe src="https://...." height="602" width="802"> </iframe></p>
<script>// <![CDATA[
function popup(){
  window.open('https://....', '_blank', 'toolbar=0,location=0,menubar=0');
 }
// ]]></script>
#+END_EXAMPLE

**** Including the videos
    + Similarly for including a *Video* :
       + Click on =+ New Unit= to create a unit named *Video*
       + Choose the =Video= component from Add New Component.
       + Include the URL of the video to be added.
    + Click on =Tools= dropdown menu option from top. Select =import= option.
    + Click on =Choose a file to Import= and choose the tar.gz file of
      the lab. Click on =Replace course content with file= and select
      =View Updated Outline= to view the newly created course.
**** Including the images
    + Direct copy pasting the image works sometimes and sometimes
      doesnt. In that case, images can be uploaded from =Content= tab
      above and =Files and Uploads= option. Upload the image and
      provide the URL given to render the image.
**** Including the quiz
    + Select the =Problem= component for creating different quizzes.
**** Publishing the course content
     Click on the upward arrow icon in each section for publishing all
     the contents of a section.
**** Exporting the course
  + Click on =Tools= dropdown menu option from top. Click on =export= option.
  + Choose the =Export Course Content= option and save the tar.gz file
    of the created lab in the local machine which could be pushed as
    sources to GitHub.
**** Miscellanious modifications in the course
    Few more steps to make other modifications are listed below : 
***** Modification of course date to Anytime
      + Click on Course name which you own.
      + Go to settings drop down, and click Advanced settings.
      + Change field “Course Advertised Start Date” from null to “Anytime”
      + Save your changes
***** Modification of the default course preview and uploading the course image
      + Click on Course name.
      + Go to =schedule and details= in settings drop down.
      + Leave all the fields in course schedule empty except for the
        first field which should be any date previous to current date.
      + In “Introducing your Course” section edit the “Course
        Overview” as per the requirement.
      + Add a course image by clicking on Upload image button.
      + Save the changes.
*** Creation of a repository on GitHub 
    + Export the lab from =Tools= dropdown menu on the top of the
      Studio. A zipped file is downloaded. Unzip and untar the
      exported file to produce a directory.
      + Command =tar zxvf testlab.tar.gz= forms a tar.gz file.      
    + Create a repository in the github in =openedx-vlead=
      organisation with the same name as that of the lab preceeded by
      term =open-edx=
    + Clone the newly created repository.
    + Copy the entire contents of the directory created in step 1 to the
      directory created in step 3.
    + Add, commit and push all the changes to the git repository.
** Steps to port an existing lab to Open EdX
   We need not create a new course, instead the already created
   courses would be imported from GitHub.
** Troubleshooting 

** Porting of a lab with database
   Right now we are not porting any lab which comes with database.
** What comes with porting and what doesn't
   When a course is exported, edX CMS/studio creates a tar.gz file that
   includes the following course data.
   + Course content (all Sections, Subsections, and Units)
   + Course structure
   + Individual problems
   + Pages
   + Course assets
   + Course settings
   The following data is not exported with the course.
   + User data
   + Course team data
   + Discussion data
   + Certificates

** Resolving the link integrity issue
   To ensure link integrity, always include the =https= URL in the iframes of simulations. 
** Analytics
   Analytics code should be included in each simulation code in order
   to capture the usage for each experiment perfromed by a
   student. The analytics code is given below :
   #+BEGIN_SRC command
   <p><button onclick="popup()">Full Screen</button></p>
   <p><iframe src="https://ial-coep.vlabs.ac.in/Expt2/AnalogDigital.html" height="602" width="802"> </iframe></p>
   <script>// <![CDATA[
   function popup(){
    window.open('https://ial-coep.vlabs.ac.in/Expt2/AnalogDigital.html', '_blank', 'toolbar=0,location=0,menubar=0');
    }
   //  ]]></script>

   <script type="text/javascript">
    // ****** ALSO MODIFY THE URLS GIVEN ABOVE **************
   // ********MODIFY THIS SECTION **************************

   var courseid = "blockv1UniversityYPS01Anytime";
   var experiment_name = "Optimal Foraging Pollinators"
   var lab_name = "Population Ecology II"
    
   // *******DO NOT MODIFY THIS SECTION AGAIN **************
   </script>
   <script src="https://github.com/openedx-vlead/lab-usage-tracker/blob/master/src/common.js"></script>
   #+END_SRC
** Theming
   The porting process does not include any specifics for including
   any theme. By default the themes would be applied.
** Feedback
