 #+TITLE: Setting up Analytics Server
#+Author: VLEAD
#+Date: [2016-01-27 Wed]
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ../org-templates/level-0.org


* Analytics
** Introduction
  This document deals with : 
  + Installation of Open edX platform
  + Porting a virtual lab to Open edX platform
  + On how different features of the Open edX platform - persistence, single
    sign, analytics - are leveraged by Virtual Labs

** Requirements
  1. Virtual Labs has a single sign on.  All the virtual labs are accessible
     using a single sign on.
  2. A user upon re-logging to virtual labs is returned to the same state that
     the user was in before logging out of virtual labs.
  3. User action data is captured that enables building various analytics.
  4. The home page of virtual labs on Open edX platform facilitate searching of
     labs, like the courses on edx.org
  5. Style and theme of virtual labs on Open edX platform conveys a uniqueness
     relevant to Indian context.
  6. Feedback to be incorporated for virtual labs on Open edX.
  7. Ability to manage the platform - perform backups, restore from a backup,
     update to a newer version of Open edX.
  8. Virtual Labs on Open edX should adhere to [[https://open.edx.org/trademark-guidelines][trademark guidelines]] stipulated
     by Open edX platform. 
     

** Labs chosen

  The first six labs are picked from the labs there were listed to be
  demonstrated at T4E conference at NIT, Warangal.

  |------+--------------------------+------------------------+------+----------+-----------|
  | S.No | Lab Name                 | Discipline             | Lab  | Oped edX | Institute |
  |      |                          |                        | Url  | Sources  |           |
  |------+--------------------------+------------------------+------+----------+-----------|
  |   1. | Computer Programming     | Computer Science       | [[http://cse02-iiith.vlabs.ac.in/][Link]] | [[https://github.com/vlead/Open-edX-Computer-Programming][Link]]     |           |
  |      | Lab                      |                        |      |          |           |
  |------+--------------------------+------------------------+------+----------+-----------|
  |   2. | Structural Analysis      | Civil engineering      | [[http://eerc04-iiith.virtual-labs.ac.in/index.php][Link]] | [[https://github.com/vlead/Open-edX-Structural-Analysis][Link]]     |           |
  |------+--------------------------+------------------------+------+----------+-----------|
  |   3. | Population Ecology II    | Biotechnology &        | [[http://pevii-au.virtual-labs.ac.in/][Link]] | [[https://github.com/vlead/Open-edX-Population-Ecology-2][Link]]     |           |
  |      |                          | Biomedical Engineering |      |          |           |
  |------+--------------------------+------------------------+------+----------+-----------|
  |   4. | Mine Automation          | Mechanical Engineering | [[http://iitkgp.vlab.co.in/?sub=40&brch=137][Link]] |          |           |
  |      | and Virtual Reality      |                        |      |          |           |
  |------+--------------------------+------------------------+------+----------+-----------|
  |   5. | Chemical Engineering     | Chemical Engineering   | [[http://ce-iitb.vlabs.ac.in/][Link]] |          |           |
  |------+--------------------------+------------------------+------+----------+-----------|
  |   6. | Virtual Chemistry Lab    | Chemical Sciences      | [[http://vc-dei.vlabs.ac.in/][Link]] |          |           |
  |------+--------------------------+------------------------+------+----------+-----------|
  |   7. | Industrial Electric      | Electrical             | [[http://ied-nitk.vlabs.ac.in/][Link]] |          |           |
  |      | Drives and Application   | Engineering            |      |          |           |
  |      | of PLC                   |                        |      |          |           |
  |------+--------------------------+------------------------+------+----------+-----------|
  |   8. | Industrial Automation    | Electrical Engineering | [[http://ial-coep.vlabs.ac.in/Introduction.html][Link]] |          |           |
  |      | Laboratory               |                        |      |          |           |
  |------+--------------------------+------------------------+------+----------+-----------|
  |   9. | Hybrid Electronics       | Electronics &          | [[http://he-coep.vlabs.ac.in/][Link]] |          |           |
  |      |                          | Communications         |      |          |           |
  |------+--------------------------+------------------------+------+----------+-----------|
  |  10. | Virtual Smart Structures | Civil Engineering      | [[http://vssd-iitd.vlabs.ac.in/][Link]] |          |           |
  |      | and Dynamics Laboratory  |                        |      |          |           |
  |------+--------------------------+------------------------+------+----------+-----------|


** COMMENT Setting up Open edX platform on Vagrant
*** COMMENT Setup the fullstack
    fullstack of Open edX is setup using vagrant on developers' machines.
    [[http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/fullstack/install_fullstack.html][Link to Open edX documentation]]

** COMMENT Creating a course


** Setting up Open edX platform on AWS
** Launch instance on AWS ( Provision of Open edX setup)
   The following VMs are created in US-West ( N. California) region.
*** Launch instance from Community AMI
    - Choose AMI from "Community AMI"
      + Chosen ami-ad161ee8
      + Configure Instance details 
        - Network details ( Use appropriate VPC)
        - Enable "Auto-assign Public IP""
      + Add Storage
        - Choose Volume type as "Magnetic"
        - Given 40 GB 
      + Choose appropriate "Security Group"
      + Boot From "Magnetic disk"
      + Launch Instance
    - Use the Public IP of that instance to see the web console of
      Open edX platform 
    - edX platform runs on tcp 80 and 18010 port numbers
      + port 80 is to see the default edx web console
      + If we want to see the edX studio web console, use 18010 port
        number
        #+BEGIN_EXAMPLE
        public_ip:18010
        #+END_EXAMPLE
      + Use satff@example.com as user email-id and edx as password for
        logging into edx studio and to make changes in courses
    - VM details ( Current running VM for Open edX platform)
      #+BEGIN_SRC 
      I created another VM for Open edX using instance id ami-ad161ee8 from community AMI
      Details of VM:
      instnace id: ami-ad161ee8
      Instance type: t2.medium
      OS: Ubunutu 12.04
      Public IP: 54.67.89.24
      RAM : 4 GB
      Disk : 50 GB      
      #+END_SRC
     
*** Launch instance from AWS marketplace
    - Choose an Amazon Machine Image (AMI) from AWS Marketplace
      + Chosen AMI Name : Open edX powered by Bitnami (HVM).
      + Linux/Unix, Ubuntu 14.04.3 | 64-bit Amazon Machine Image
        (AMI) | Updated: 1/22/16
      + Choose an Instance Type
        - t2.medium 
        - vCPUs: 2
        - Memory(RAM): 4GB 
      + Configure Instance details 
        - Network details ( Use appropriate VPC)
        - Enable "Auto-assign Public IP""
      + Add Storage
        - Choose Volume type as "Magnetic"
        - Given 40 GB 
      + Choose appropriate "Security Group"
      + Boot From "Magnetic disk"
      + Launch Instance
    - Use the Public IP of that instance to see the web console of
      Open edX platform
    - edX platform runs on tcp 80 and 18010 port numbers
      + port 80 is to see the default edx web console
      + If we want to see the edX studio web console, use 18010 port
        number
        #+BEGIN_EXAMPLE
        public_ip:18010
        #+END_EXAMPLE
      + NOTE :: Still there are some issues in this VM. such as
                configuring sendmail by giving smtp server and
                database if it uses, etc. Still we need to look into
                those things. For now we have running edX Platform to
                host labs on edX platform.
     - Decision ::  This was running fine. But we wanted to know this
                    was configured and we were not able to log-in into
                    web console and Studio of Open edX platform. So we
                    stopped the VM and started working on setting up
                    Open edX platform using manual steps.
*** Launch Ubuntu 12.04 64 bit instance on AWS and setup Open edX Platform
**** Using Automation scripts (Not worked) 
     - Launch an Ubuntu 12.04 64 bit on AWS Minimum Requirements as
       follows for setting up Open edX platform
       + Instance id :  ami-019b6745
       + Instance Type: t2.medium
       + RAM : 4 GB
       + Hard Disk : 50 GB
     - SSH to launched instance using 
     - Update and upgrade instance
       #+BEGIN_EXAMPLE
       sudo apt-get update -y  
       sudo apt-get upgrade -y
       #+END_EXAMPLE
       #+BEGIN_EXAMPLE
       ssh -i "Open edX.pem" ubuntu@ec2-54-153-2-214.us-west-1.compute.amazonaws.com
       #+END_EXAMPLE
     - Reboot the instance 
       #+BEGIN_EXAMPLE
       sudo reboot
       #+END_EXAMPLE
     - Automated Installation scripts
       + Install Open edX release 
         #+BEGIN_EXAMPLE
	 export OPENEDX_RELEASE=named-release/cypress
	 wget https://raw.githubusercontent.com/edx/configuration/master/util/install/ansible-bootstrap.sh -O - | sudo bash     
	 wget https://raw.githubusercontent.com/edx/configuration/master/util/install/sandbox.sh -O - | bash     
	 #+END_EXAMPLE
     - NOTE :: In second script, edx_ansible role is trying to check
               out to release of edx_ansible but it is unable to do
               that. I have tried many times running second script but
               no result.

     After working on this for almost 5 hours,due to some problems
     with automation scripts I decided to go and follow the
     manual steps to setup Open edX platform.
     
**** Using Manual steps to install Open edX (worked) 
     - Launched VM ubuntu 12.04 64 bit on AWS with above VM details
     - update and upgrade vm
     - Perform the steps bellow 
       #+BEGIN_SRC 
       sudo apt-get install -y build-essential software-properties-common python-software-properties curl git-core libxml2-dev libxslt1-dev libfreetype6-dev python-pip python-apt python-dev libxmlsec1-dev swig libmysqlclient-dev
       sudo pip install --upgrade pip
       sudo pip install --upgrade virtualenv
       #+END_SRC
     - On the new server, clone the configuration repo
       #+BEGIN_SRC 
       cd /var/tmp
       git clone https://github.com/edx/configuration
       #+END_SRC
     - Allow password based SSH authentication. For that edit the
       common role inside of
       =configuration/playbooks/roles/common_vars/defaults/main.yml= and
       set *COMMON_SSH_PASSWORD_AUTH to "yes"*
     - Install the ansible requirements 
       #+BEGIN_SRC 
       cd /var/tmp/configuration
       sudo pip install -r requirements.txt
       #+END_SRC
     - NOTE :: By default, next command (which would run play books to
               setup platform)uses edx-platform master branch. Latest
               release is dogwood(That is in master branch).
	     
               So, set environment variable for OPENEDX_RELEASE
               variable for installing required Open edX platform
               release.
              
               For example, 
               #+BEGIN_EXAMPLE
	       export $OPENEDX_RELEASE=named-release/birtch.2
	       or 
	       export $OPENEDX_RELEASE=named-release/cypress
	       #+END_EXAMPLE
     - NOTE :: You may be getting the problem with paramiko
               package. Install it and run the below command.
		 #+BEGIN_EXAMPLE
		 sudo pip install paramiko==1.10
		 #+END_EXAMPLE
       
     - Run the edx_sandbox.yml playbook in the configuration/playbooks directory
       #+BEGIN_SRC 
       cd /var/tmp/configuration/playbooks && sudo ansible-playbook -c local ./edx_sandbox.yml -i "localhost,"
       #+END_SRC
     - EdX platform runs on tcp 80 and 18010 port numbers
       + Port 80 is to see the default edx web console
       + If we want to see the edX studio web console, use 18010 port
         number
         #+BEGIN_EXAMPLE
         public_ip:18010
         #+END_EXAMPLE

     - Resource
       https://github.com/edx/configuration/wiki/edX-Ubuntu-12.04-64-bit-Installation. 
     - Created AMI out of this instance.
       AMI name: Open edX configured with dogwood
       AMI id: ami-ce0f79ae


* Upgrade Open edX platform from older/past release to the newer release 
** Setup Open edX platform with named-release/birtch.2
   - Launched an Ubuntu 12.04 64 bit (ami-019b6745)  instance on AWS
     + RAM : 4 GB 
     + HDD : 50 GB
   - Update and upgrade the machine
   - Install 
     #+BEGIN_EXAMPLE
     sudo apt-get install -y build-essential software-properties-common python-software-properties curl git-core libxml2-dev libxslt1-dev libfreetype6-dev python-pip python-apt python-dev libxmlsec1-dev swig libmysqlclient-dev
     sudo pip install --upgrade pip
     sudo pip install --upgrade virtualenv
     #+END_EXAMPLE
   - Perform the steps
     #+BEGIN_EXAMPLE
     cd /var/tmp
     git clone https://github.com/edx/configuration
     #+END_EXAMPLE
   - Allow password based SSH authentication, for that do the
     following 
     #+BEGIN_EXAMPLE
     cd configuration/
     vim configuration/playbooks/roles/common_vars/defaults/main.yml
     #+END_EXAMPLE
     and set =COMMON_SSH_PASSWORD_AUTH= to "yes"
   - Issue the following command to install required packages.
     #+BEGIN_EXAMPLE
     sudo pip install -r requirements.txt
     #+END_EXAMPLE
   - Export 
     #+BEGIN_EXAMPLE
     export OPENEDX_RELEASE="named-release/birch.2"
     #+END_EXAMPLE
   - Install paramiko package
     #+BEGIN_EXAMPLE
     sudo pip install paramiko==1.10
     #+END_EXAMPLE
   - Run 
     #+BEGIN_EXAMPLE
     cd /var/tmp/configuration/playbooks && sudo ansible-playbook -c local ./edx_sandbox.yml -i "localhost,"     
     #+END_EXAMPLE
   - Open edX platform has been setup with the
     "named-release/birtch.2"
** Upgrade from birtch.2 release to cypress release  
   - Export 
     #+BEGIN_EXAMPLE
     export OPENEDX_RELEASE="named-release/cypress"
     #+END_EXAMPLE    
   - Run 
     #+BEGIN_EXAMPLE
     cd /var/tmp/configuration/playbooks && sudo ansible-playbook -c local ./edx_sandbox.yml -i "localhost,"     
     #+END_EXAMPLE
   - Successfully upgraded/migrated to cypress
** (Don't do this, Site will go down)Upgrade from dogwood to cypress
   - Export named-release/cypress
     #+BEGIN_EXAMPLE
     export OPENEDX_RELEASE=named-release/cypress
     #+END_EXAMPLE
   - Run 
     #+BEGIN_SRC 
     sh /var/tmp/configuration/util/install/sandbox.sh
     #+END_SRC
   - Output of above command ( script failed running )
     #+BEGIN_EXAMPLE
     TASK: [edxapp | create helper scripts for managing edxapp] ******************** 
     ok: [localhost] => (item=['edxapp-migrate', 'lms'])
     ok: [localhost] => (item=['edxapp-migrate', 'cms'])
     ok: [localhost] => (item=['edxapp-runserver', 'lms'])
     ok: [localhost] => (item=['edxapp-runserver', 'cms'])
     ok: [localhost] => (item=['edxapp-syncdb', 'lms'])
     ok: [localhost] => (item=['edxapp-syncdb', 'cms'])
     ok: [localhost] => (item=['edxapp-update-assets', 'lms'])
     ok: [localhost] => (item=['edxapp-update-assets', 'cms'])
     ok: [localhost] => (item=['edxapp-shell', 'lms'])
     ok: [localhost] => (item=['edxapp-shell', 'cms'])
     
     TASK: [edxapp | migrate] ****************************************************** 
     failed: [localhost] => (item=lms) => {"changed": true, "cmd": ["/edx/bin/edxapp-migrate-lms"], "delta": "0:00:08.240761", "end": "2016-02-04 11:46:54.277822", "item": "lms", "rc": 1, "start": "2016-02-04 11:46:46.037061", "warnings": []}
     stderr: warning: unable to access '/root/.config/git/attributes': Permission denied
     2016-02-04 06:46:50,317 INFO 10142 [dd.dogapi] dog_stats_api.py:66 - Initializing dog api to use statsd: localhost, 8125
     Traceback (most recent call last):
     File "manage.py", line 116, in <module>
     execute_from_command_line([sys.argv[0]] + django_args)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/core/management/__init__.py", line 443, in execute_from_command_line
     utility.execute()
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/core/management/__init__.py", line 382, in execute
     self.fetch_command(subcommand).run_from_argv(self.argv)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/core/management/base.py", line 196, in run_from_argv
     self.execute(*args, **options.__dict__)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/core/management/base.py", line 232, in execute
     output = self.handle(*args, **options)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/south/management/commands/migrate.py", line 111, in handle
     ignore_ghosts = ignore_ghosts,
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/south/migration/__init__.py", line 200, in migrate_app
     applied_all = check_migration_histories(applied_all, delete_ghosts, ignore_ghosts)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/south/migration/__init__.py", line 79, in check_migration_histories
     for h in histories:
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/db/models/query.py", line 118, in _result_iter
     self._fill_cache()
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/db/models/query.py", line 892, in _fill_cache
     self._result_cache.append(self._iter.next())
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/db/models/query.py", line 291, in iterator
     for row in compiler.results_iter():
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py", line 763, in results_iter
     for rows in self.execute_sql(MULTI):
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py", line 818, in execute_sql
     cursor.execute(sql, params)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/db/backends/mysql/base.py", line 114, in execute
     return self.cursor.execute(query, args)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/MySQLdb/cursors.py", line 205, in execute
     self.errorhandler(self, exc, value)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
     raise errorclass, errorvalue
     django.db.utils.DatabaseError: (1146, "Table 'edxapp.south_migrationhistory' doesn't exist")
     failed: [localhost] => (item=cms) => {"changed": true, "cmd": ["/edx/bin/edxapp-migrate-cms"], "delta": "0:00:02.559445", "end": "2016-02-04 11:46:56.914430", "item": "cms", "rc": 1, "start": "2016-02-04 11:46:54.354985", "warnings": []}
     stderr: 2016-02-04 06:46:56,285 INFO 10178 [dd.dogapi] dog_stats_api.py:66 - Initializing dog api to use statsd: localhost, 8125
     Traceback (most recent call last):
     File "manage.py", line 116, in <module>
     execute_from_command_line([sys.argv[0]] + django_args)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/core/management/__init__.py", line 443, in execute_from_command_line
     utility.execute()
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/core/management/__init__.py", line 382, in execute
     self.fetch_command(subcommand).run_from_argv(self.argv)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/core/management/base.py", line 196, in run_from_argv
     self.execute(*args, **options.__dict__)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/core/management/base.py", line 232, in execute
     output = self.handle(*args, **options)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/south/management/commands/migrate.py", line 111, in handle
     ignore_ghosts = ignore_ghosts,
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/south/migration/__init__.py", line 200, in migrate_app
     applied_all = check_migration_histories(applied_all, delete_ghosts, ignore_ghosts)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/south/migration/__init__.py", line 79, in check_migration_histories
     for h in histories:
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/db/models/query.py", line 118, in _result_iter
     self._fill_cache()
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/db/models/query.py", line 892, in _fill_cache
     self._result_cache.append(self._iter.next())
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/db/models/query.py", line 291, in iterator
     for row in compiler.results_iter():
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py", line 763, in results_iter
     for rows in self.execute_sql(MULTI):
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py", line 818, in execute_sql
     cursor.execute(sql, params)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/db/backends/mysql/base.py", line 114, in execute
     return self.cursor.execute(query, args)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/MySQLdb/cursors.py", line 205, in execute
     self.errorhandler(self, exc, value)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
     raise errorclass, errorvalue
     django.db.utils.DatabaseError: (1146, "Table 'edxapp.south_migrationhistory' doesn't exist")
     
     FATAL: all hosts have already failed -- aborting

     #+END_EXAMPLE
   - Run failed, Open edX platform goes down.

       
* Take database backup and restore it from this backup
  This Section describes "how to take database backup? and how to restore
  it from this backup?"

  The Open edX platform is having two databases, they are:
  1. MySql and 
  2. Mogodb
** Take backup and restore it 
   - Launch new Ubuntu 12.04 64 bit VM with basic hardware
     requirements.
   - Setup Open edX platform with cypress on that VM 
   - Import some labs/courses from edX Studio which is already
     running on production into new VM .   
   - Take backup of existing databases on newly launched VM with the
     following commands
     #+BEGIN_SRC 
     sudo mongodump -o ./mongo-backup
     sudo mysqldump -u edxapp001 -p --all-databases > ./backup.sql
     #+END_SRC
   - Restore the databases.
     #+BEGIN_SRC 
     sudo mongorestore -drop ./mongo-backup     
     sudo mysql -u edxapp001 -p < ./backup.sql
     #+END_SRC
   - Successfully restored database-dumps 
   - Reference link
     https://github.com/edx/configuration/wiki/Preparation-For-Production-Launch
** Deleting a course from Open edX Studio
   - Delete a particular course using the following command 
     #+BEGIN_SRC
     cd /edx/app/edxapp/edx_platform/
     sudo -u www-data /edx/bin/python.edxapp ./manage.py cms --settings=aws delete_course course-v1:Organization+CourseNumber+CourseRun commit
     #+END_SRC
   - For example, if we want to delete course
     course-v1:IIITH+pevii+2016_T11(course-v1:Organization+CourseNumber+CourseRun)
     then issue following command in command line
     #+BEGIN_EXAMPLE
     sudo -u www-data /edx/bin/python.edxapp ./manage.py cms --settings=aws delete_course course-v1:IIITH+pevii+2016_T11
     #+END_EXAMPLE
     The above command will ask you whether to delete course or not ,
     proceed accordingly.
   - Reference link
     + Delete course :: https://github.com/edx/configuration/wiki/edX-Managing-the-Full-Stack
   - Restore the databases again with the backed up databases to see
     whether we are able to restore the courses or not .
     #+BEGIN_SRC 
     cd ~
     sudo mongorestore -drop ./mongo-backup     
     sudo mysql -u edxapp001 -p < ./backup.sql
     #+END_SRC

* Configure Open edX analytics for the courses 
** Setting up edx-analytics-pipeline
   1. Create a saperate VM with at least 2GB of RAM and 30GB of HDD
      for setting up edX analytics
   2. Update and upgrade the VM
      #+BEGIN_EXAMPLE
      sudo apt-get update
      sudo apt-get upgrade
      #+END_EXAMPLE
   3. Create a separate virtual environment for the edx analytics setup.
      #+BEGIN_EXAMPLE
      # create an "ansible" virtualenv and activate it
      virtualenv ansible
      . ansible/bin/activate
      #+END_EXAMPLE
   4. Do the following steps
      #+BEGIN_EXAMPLE
      git clone https://github.com/edx/configuration.git

      cd configuration/
    
      pip install -r requirements.txt
    
      cd playbooks/edx-east/
    
      sudo ansible-playbook -i localhost, -c local analytics_single.yml --extra-vars "INSIGHTS_LMS_BASE=mysite.org"
      # (If your site uses https, change the scheme and set the oauth flag to true. Enforce_secure means "insist on https".)
    
    
      # wait for a while :)
      #+END_EXAMPLE
   5. Run the following commands to see hadoop job. This job has
      built-in "compute pi"
      #+BEGIN_EXAMPLE
      sudo su - hadoop
  
      cd /edx/app/hadoop
 
      hadoop jar hadoop-2.3.0/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.3.0.jar pi 2 100
      # it should compute something -- I got pi = 3.12. Close enough :)
      #+END_EXAMPLE
   6. Also make sure you can run hive
      #+BEGIN_EXAMPLE
      /edx/app/hadoop/hive/bin/hive
      # it should work
      ^D to get back to your regular user
      #+END_EXAMPLE
   7. Get some test logs into HDFS
      #+BEGIN_EXAMPLE
      # scp tracking.log onto the machine from the LMS. Then...
      sudo mkdir /edx/var/log/tracking
      sudo cp tracking.log /edx/var/log/tracking
      sudo chown hadoop /edx/var/log/tracking/tracking.log
      # wait a minute -- ansible creates a cron job to load files in that dir every minute
    
      # Check it  
      hdfs dfs -ls /data
    
      Found 1 items
      -rw-r--r--   1 hadoop supergroup     308814 2015-10-15 14:31 /data/tracking.log
      #+END_EXAMPLE
   8. Setup PIPELINE 
      #+BEGIN_SRC 
      ssh-keygen -t rsa -f ~/.ssh/id_rsa -P ''
      echo >> ~/.ssh/authorized_keys # Make sure there's a newline at the end
      cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
      # check: ssh localhost "echo It worked!" -- make sure it works.
  
      # Make a new virtualenv -- otherwise will have conflicts
      virtualenv pipeline
      . pipeline/bin/activate
  
  
      git clone https://github.com/edx/edx-analytics-pipeline
      cd edx-analytics-pipeline
  
      make bootstrap
    
      #+END_SRC
   9. Check the pipeline install by running a simple job to count
      events per day.
      *NOTE* : You may have to change the user name in the following
      command according to your system user accounts. 

      For example, If you want to run the command from root user (ssh
      access should be enabled for this access) then provide *--user
      root*
      #+BEGIN_SRC 
      # Ensure you're in the pipeline virtualenv 
      remote-task --host localhost --repo https://github.com/edx/edx-analytics-pipeline --user ubuntu --override-config $HOME/edx-analytics-pipeline/config/devstack.cfg --wheel-url http://edx-wheelhouse.s3-website-us-east-1.amazonaws.com/Ubuntu/precise --remote-name analyticstack --wait TotalEventsDailyTask --interval 2015 --output-root hdfs://localhost:9000/output/ --local-scheduler
      #+END_SRC
   10. Update the following file so that insights will be connected to
       LMS edxapp database.
       #+BEGIN_SRC 
       sudo vim /edx/etc/edx-analytics-pipeline/input.json
       # put in the right url and credentials for your LMS database
       #+END_SRC
       - Test it by running the following command. The output of the
         below command shows the mysql queries. 
	 #+BEGIN_SRC
	 remote-task --host localhost --user ubuntu --remote-name analyticstack --skip-setup --wait ImportEnrollmentsIntoMysql --interval 2015 --local-scheduler
	 #+END_SRC
   11. Create OAUTH2 client_id and secret from Django administartion
       page of LMS machine
       - *How to create OAUTH2 client_id and secret key:*
	 By default, edx-platform is not providing/creating default
         user and password for signing in. So we need to create a
         superuser so that we can access the django admin page using
         those credentials. 
	
	 Create super user by issuing following commands on the LMS
         machine.
	 #+BEGIN_SRC 
	 sudo -u www-data /edx/bin/python.edxapp ./manage.py lms --settings aws create_user -s -p edx -e user@example.com
         sudo -u www-data /edx/bin/python.edxapp ./manage.py lms --settings aws changepassword user
         sudo -u www-data /edx/bin/python.edxapp ./manage.py lms --settings aws shell

         from django.contrib.auth.models import User
         me = User.objects.get(username="user")
         me.is_superuser = True
         me.is_staff = True
         me.save()
	 #+END_SRC
       - Do the following steps
	 + Find the Oauth2 table/app in the admin page
	 + Add client 
	 + Find the Oauth2_provider table/app
	 + Add this client to Trusted clients

         *OR*

       - OPTIONAL :: If you want to run the following command on the
                     LMS machine from command line, replace the
                     --client-id and client_secret with the proper
                     values.
         #+BEGIN_SRC 
         sudo su edxapp
         /edx/bin/python.edxapp /edx/bin/manage.edxapp lms --setting=aws create_oauth2_client http://<insights-ip>:18110 http://<insights-ip>:18110/complete/edx-oidc/ confidential --client_name insights --client_id YOUR_OAUTH2_KEY --client_secret secret --trusted
         #+END_SRC
** (In Progress) Setting up edx-analtics-data-api  
   - Create a separate virtual environment for the analytics-api and
     activate it.
     #+BEGIN_SRC 
     virtualenv analytics-api
     . analytics-api/bin/activate
     #+END_SRC
   - Clone the analytics-api repo
     #+BEGIN_SRC 
     git clone https://github.com/edx/edx-analytics-data-api
     #+END_SRC
   - Follow the steps given at
     https://github.com/edx/edx-analytics-data-api


  - Resources
    https://openedx.atlassian.net/wiki/display/OpenOPS/edX+Analytics+Installation
    https://github.com/edx/edx-analytics-pipeline/wiki/How-Stanford-Online-runs-the-analytics-stack
    https://github.com/edx/edx-analytics-pipeline/wiki
    http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/analytics/install_analytics.html
    http://ubuntuforums.org/showthread.php?t=1836919
    https://github.com/open-craft/edx-analytics-devstack

* Work around the configuration files of Open edX setup.
** How to delete Open edX Studio user from database
   To delete edX Studio user from database we need to do following in
   mysql database called "edxapp"
   #+BEGIN_SRC 
   database name: edxapp
   username: edxapp001 
   password: password
   #+END_SRC
   We can find these database details in
   =/edx/app/edxapp/cms.auth.json=
   - Delete from user_api_userpreference table
   #+BEGIN_EXAMPLE
   mysql> delete  from user_api_userpreference where user_id=;   
   #+END_EXAMPLE
   - Delete from auth_userprofile  table
   #+BEGIN_EXAMPLE
   delete from auth_userprofile where id=
   #+END_EXAMPLE
   - Delete from auth_registration table
     #+BEGIN_EXAMPLE
     mysql> delete from auth_registration where user_id=;
     #+END_EXAMPLE
   - Then delete from auth_user table
     #+BEGIN_EXAMPLE
     delete from auth_user where id=5;
     #+END_EXAMPLE

** Configure edX platform so that it gives us proper verification link
   - Edit the file
     =/edx/edxapp/edxapp/edx-platform/cms/envs/common.py= and add IP
     of url to =EMAIL_HOST= variable.
     + Restart edx resources
       #+BEGIN_EXAMPLE
       /edx/bin/supervisorctl restart edxapp:       
       /edx/bin/supervisorctl restart edxapp_worker:
       #+END_EXAMPLE
     + It did not work
     + So reverted back to original file. That is, in
       =/edx/edxapp/edxapp/edx-platform/cms/envs/common.py=, removed
       IP and updated with localhost for =EMAIL_HOST= variable.
   - Edit the file 
     #+BEGIN_SRC 
     vim /edx/app/edxapp/lms.env.json
     vim /edx/app/edxapp/cms.env.json
     #+END_SRC
     and add the domain name to =SITE_NAME= variable in both the
     files. 
   - Restart the edx services 
     #+BEGIN_SRC 
     /edx/bin/supervisorctl restart edxapp:       
     edxapp:cms: stopped
     edxapp:lms: stopped
     edxapp:lms: started
     edxapp:cms: started
     
     /edx/bin/supervisorctl restart edxapp_worker:
     edxapp_worker:cms_low_3: stopped
     edxapp_worker:lms_high_mem_2: stopped
     edxapp_worker:lms_default_3: stopped
     edxapp_worker:cms_high_1: stopped
     edxapp_worker:lms_low_1: stopped
     edxapp_worker:cms_default_4: stopped
     edxapp_worker:lms_high_4: stopped
     edxapp_worker:cms_low_3: started
     edxapp_worker:lms_high_mem_2: started
     edxapp_worker:lms_default_3: started
     edxapp_worker:cms_high_1: started
     edxapp_worker:lms_low_1: started
     edxapp_worker:cms_default_4: started
     edxapp_worker:lms_high_4: started
     #+END_SRC
   - It worked  
   - Reference link
     https://groups.google.com/forum/#!topic/edx-code/YDwsjuFQuXc


* References for Open edX platform 
  - https://github.com/edx/configuration/wiki
  - http://edx-developer-guide.readthedocs.org/en/latest/public_sandboxes.html
  - https://openedx.atlassian.net/wiki/display/OPEN/Debugging+Issues+with+LMS+and+Studio













* Introduction

  Analytics provide the user activity while using virtual labs on Open edX
  platform.  This data allows an insight into the usage of virtual labs that
  could be used for various purposes.  

* Architecture of Open edX Analytics Gathering

  [[http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/_images/Analytics_Pipeline.png][Architecture Diagram]]

  Capturing of Analytics is three phased.  
  1. LMS, read as Open edX platfrom from which the labs are run, captures the
     events of a user.
  2. Pipeline reads this data from the platform, collates and creates a store
     in a format that could be read by an API.
  3. edx Analytics Data API provides an HTTP interface to access the store
     created by the Pipeline.

  The platform also exposes a [[http://edx.readthedocs.org/projects/edx-platform-api/en/latest/course_structure/index.html][set of API]] to get all the courses that are being
  run on a platform. 

* Plan
** TODO Deployment of Pipeline
   Due Date :: [2016-02-04 Thu]
   
** TODO Analytics Data API
   Analytics Data API provides a mechanism to access the store created by
   Pipeline via HTTP. 
   Due Date :: [2016-02-05 Fri]

* Progress
  - [2016-02-04 Thu] :: edx Analytics Data API is deployed on a container
       (16180) on 10.4.12.24 (base4) and the API tested out.  The lowest level
       of activity that can be retrieved by this API is 'Get the View Count for
       a Subsection'.
  - [2016-02-04 Thu] :: Able to use the [[http://edx.readthedocs.org/projects/edx-platform-api/en/latest/course_structure/course_structure.html#get-a-list-of-courses][course API]] to retrieve course
       information from the Open edX platform.
    #+BEGIN_EXAMPLE
    http://192.168.33.10/api/course_structure/v0/courses/?format=json

    Result
    {"count": 1, "next": null, "previous": null, "num_pages": 1, "current_page": 1, 
     "start": 0, "sort_order": null, "results": [{"id": "course-v1:edX+DemoX+Demo_Course", 
     "name": "edX Demonstration Course", "category": "course", "org": "edX", 
     "run": "Demo_Course", "course": "DemoX", 
     "uri": "http://192.168.33.10/api/course_structure/v0/courses/course-v1:edX+DemoX+Demo_Course/", "image_url": "/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg", 
     "start": "2013-02-05T05:00:00Z", "end": null}]}
    #+END_EXAMPLE




* Planning
** Phases
  |-----------+--------------------------------------------------+------------|
  | Phases    | Description                                      | Start Date |
  |-----------+--------------------------------------------------+------------|
  | Phase I   | Porting of 10 labs to Open edX platform by VLEAD | 2/2/2016   |
  |-----------+--------------------------------------------------+------------|
  | Phase II  | Porting of labs by the IIIT integration team to  | 15/2/2016  |
  |           | Open edX platfrom                                |            |
  |-----------+--------------------------------------------------+------------|
  | Phase III | Workshop                                         | 1/3/2016   |
  |-----------+--------------------------------------------------+------------|

** Phase I
   Porting of 10 labs to Open edX platform by VLEAD.

   |---------------------------+------------------+------------------+------------------|
   | Deliverable               | Effort &         | Start Date       | End Date         |
   |                           | Resources        |                  |                  |
   |---------------------------+------------------+------------------+------------------|
   | Open edX platfrom         | 2+ person days   | [2016-02-02 Tue] | [2016-02-03 Wed] |
   | on AWS                    | Shiva & Thirumal |                  |                  |
   |---------------------------+------------------+------------------+------------------|
   | Identification            | 1 person day     | [2016-02-02 Tue] | [2016-02-02 Tue] |
   | of 10 labs                | Thirumal         |                  |                  |
   |---------------------------+------------------+------------------+------------------|
   | Porting of 10 labs        | 1 person day/lab | [2016-02-03 Wed] | [2016-02-10 Wed] |
   | to Open edX               | Dinesh           |                  |                  |
   | platfrom                  | Shiva            |                  |                  |
   |---------------------------+------------------+------------------+------------------|
   | Configuring Analytics     | 2 person days    | [2016-02-05 Fri] | [2016-02-08 Mon] |
   | of Open edX for           | Thirumal         |                  |                  |
   | virtual labs usage        |                  |                  |                  |
   |---------------------------+------------------+------------------+------------------|
   | Automation, porting a lab | 5 person days    | [2016-02-09 Tue] | [2016-02-15 Mon] |
   | from github               | Thirumal         |                  |                  |
   |---------------------------+------------------+------------------+------------------|
   | Documentation of this     |                  | [2016-02-02 Tue] | [2016-02-15 Mon] |
   | process                   |                  |                  |                  |
   |---------------------------+------------------+------------------+------------------|
** Backup and Restore 
   [[Take database backup and restore it from this backup]]

** Migrate Open edX platform from older releases/versions to the newer releases
   [[Upgrade Open edX platform from older/past release to the newer release]]
   
** Configuring edX Analytics  

    
* Open Questions
  1. How does a database used by a lab get integrated into Open edX platform?

* COMMENT Demo
  - analytics
  - central login
  - performance concerns
  - security concerns
  - hosting/deployment process
  - authoring process,
  - backend connection to running simulation for labs
  - backup, restore and logging for incident response and troubleshooting

